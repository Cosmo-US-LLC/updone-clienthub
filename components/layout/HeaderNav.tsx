"use client";
import Link from "next/link";
import Image from "next/image";
import Cookies from "js-cookie";
import { Button } from "../ui/button";
import { useDispatch } from "react-redux";
import { ChevronDown, Settings } from "lucide-react";
import { apiRequest } from "@/app/lib/services";
import React, { useEffect, useState } from "react";
import { useAppSelector } from "@/app/lib/store/hooks";
import { usePathname, useRouter } from "next/navigation";
import { setEventsEmpty } from "@/app/lib/store/features/eventSlice";
import { clearAuth, selectAuth } from "@/app/lib/store/features/authSlice";
import { setEmpty as setAuthEmpty } from "@/app/lib/store/features/authSlice";
import { setEmpty as setStaffEmpty } from "@/app/lib/store/features/staffSlice";
import { setEmpty as setJobEmpty } from "@/app/lib/store/features/jobCreateSlice";
import { setEmpty as setBookingEmpty } from "@/app/lib/store/features/bookingSlice";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { FiLogOut } from "react-icons/fi";
import { Skeleton } from "../ui/skeleton";

function HeaderNav() {
  const router = useRouter();
  const pathname = usePathname();
  const dispatch = useDispatch();
  const { auth: storedData } = useAppSelector(selectAuth);
  const [isClient, setIsClient] = useState(false);

  const user = storedData?.user;

  // Ensure the code runs only on the client-side
  useEffect(() => {
    setIsClient(true);
  }, []);

  const handleLogout = async () => {
    await apiRequest("/logout", {
      method: "POST",
      headers: {
        revalidate: true,
        ...(storedData && { Authorization: `Bearer ${storedData?.token}` }),
      },
      body: {},
    }).then((res: any) => {
      console.log(res);
      // ✅ Clear Redux Authentication & Data States
      dispatch(clearAuth());
      dispatch(setStaffEmpty());
      dispatch(setBookingEmpty());
      dispatch(setJobEmpty());
      dispatch(setAuthEmpty());
      dispatch(setEventsEmpty());

      // alert('Redux cleared')

      // ✅ Remove Authentication Cookies
      Cookies.remove("token");
      Cookies.remove("authToken");
      Cookies.remove("authData");

      // ✅ Redirect Based on Role
      router.push(`${process.env.NEXT_PUBLIC_BASE_URL}/logout?status=200`);
    });
  };

  return (
    <div className="h-full pl-8 py-4 flex items-center justify-between text-white">
      <div className="flex items-center gap-12">
        <Link href={"/"} className="w-[147px] h-[36px]">
          <svg
            width="147"
            height="36"
            viewBox="0 0 147 36"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g clipPath="url(#clip0_11889_161534)">
              <path
                d="M30.7929 0L29.0187 8.78606C29.0187 8.78606 28.9013 9.39929 28.891 9.4374C27.4413 16.8758 24.8077 24.7264 18.8467 29.8227C14.5666 33.7065 7.37334 35.068 2.96557 30.6404C0.960156 28.6309 0.0523687 25.9771 0.000593754 23.2505C-0.0221619 20.7305 0.609526 18.2481 1.83343 16.0477C1.93007 15.8814 2.02672 15.7013 2.12682 15.5488C2.22692 15.3964 2.37879 15.147 2.50995 14.9564C2.64111 14.7659 2.77918 14.5718 2.91725 14.3882C3.33638 13.8387 3.79803 13.3232 4.29791 12.8465C4.59821 12.5763 4.9054 12.3199 5.22296 12.0808L5.54741 11.8487C5.82354 11.6512 6.10313 11.4607 6.39307 11.2875C6.53459 11.2008 6.68301 11.1142 6.83143 11.038C6.97985 10.9618 7.12482 10.8786 7.27669 10.8024C7.18005 10.9341 7.07995 11.0657 6.98675 11.1974C6.67611 11.6166 6.38271 12.0393 6.11694 12.4689C5.85116 12.8985 5.57503 13.3419 5.32651 13.7958C5.32781 13.8061 5.32781 13.8166 5.32651 13.827C5.24367 13.9759 5.16428 14.1249 5.09179 14.2739C5.01931 14.4229 4.93302 14.5822 4.85708 14.7381C4.78114 14.894 4.70521 15.0534 4.63272 15.2128C2.64457 19.0238 1.96804 24.9135 5.52325 27.8064C5.58193 27.8514 5.65096 27.8964 5.73035 27.9484C7.05234 28.8215 8.76091 28.967 10.3728 28.5443C12.0126 28.0549 13.4755 27.0981 14.5839 25.79L14.6529 25.7172C16.6756 23.4376 18.0079 20.2675 18.7949 17.5929C19.4076 15.3457 19.8484 13.0547 20.1134 10.7401L16.1958 10.7054L30.7929 0Z"
                fill="white"
              />
              <path
                d="M14.6522 25.7172C12.45 29.0397 9.21581 30.6403 5.89186 29.8261C2.17096 28.9288 0.462392 26.5175 0.0240313 23.2435C0.00127562 20.7236 0.632963 18.2411 1.85686 16.0408C1.95351 15.8745 2.05016 15.6943 2.15025 15.5419C2.25035 15.3894 2.40223 15.14 2.53339 14.9494C2.66455 14.7589 2.80262 14.5649 2.94069 14.3813C3.35982 13.8317 3.82147 13.3162 4.32135 12.8395C4.62164 12.5693 4.92884 12.3129 5.2464 12.0739L5.57085 11.8417C5.84698 11.6443 6.13347 11.4537 6.41996 11.277C6.56148 11.1904 6.7099 11.1038 6.85832 11.0276C7.00674 10.9514 7.15171 10.8682 7.30359 10.792C7.20694 10.9236 7.10684 11.0553 7.01365 11.1869L6.7168 11.5854C6.51316 11.8729 6.31641 12.1639 6.12657 12.4619C5.85044 12.895 5.58811 13.335 5.33614 13.7888C5.33744 13.7992 5.33744 13.8096 5.33614 13.82C5.25675 13.969 5.17391 14.1179 5.10143 14.2669C5.02894 14.4159 4.94265 14.5753 4.86671 14.7312C4.79078 14.8871 4.71484 15.0464 4.64235 15.2058C2.6542 19.0168 1.97767 24.9065 5.53288 27.7994C5.59156 27.8444 5.66059 27.8895 5.73998 27.9414C7.06197 28.8145 8.77054 28.96 10.3825 28.5373C12.0177 28.048 13.4767 27.0938 14.5831 25.79L14.6522 25.7172Z"
                fill="white"
              />
              <path
                d="M32.0763 19.2644C32.0763 17.5624 32.4601 16.0355 33.2277 14.6839C33.9953 13.3156 35.0382 12.2476 36.3565 11.48C37.6914 10.7124 39.1682 10.3286 40.7868 10.3286C42.6892 10.3286 44.3495 10.7875 45.7679 11.7053C47.1863 12.6231 48.2208 13.9246 48.8716 15.61H46.1433C45.6594 14.5587 44.9586 13.7494 44.0408 13.1821C43.1397 12.6147 42.0551 12.331 40.7868 12.331C39.5687 12.331 38.4757 12.6147 37.5079 13.1821C36.54 13.7494 35.7808 14.5587 35.2301 15.61C34.6795 16.6446 34.4041 17.8627 34.4041 19.2644C34.4041 20.6494 34.6795 21.8676 35.2301 22.9188C35.7808 23.9534 36.54 24.7544 37.5079 25.3218C38.4757 25.8891 39.5687 26.1728 40.7868 26.1728C42.0551 26.1728 43.1397 25.8975 44.0408 25.3468C44.9586 24.7794 45.6594 23.9701 46.1433 22.9188H48.8716C48.2208 24.5875 47.1863 25.8808 45.7679 26.7985C44.3495 27.6996 42.6892 28.1502 40.7868 28.1502C39.1682 28.1502 37.6914 27.7747 36.3565 27.0238C35.0382 26.2562 33.9953 25.1966 33.2277 23.845C32.4601 22.4933 32.0763 20.9665 32.0763 19.2644ZM53.5388 9.47758V28H51.2611V9.47758H53.5388ZM57.5961 12.0557C57.1622 12.0557 56.7951 11.9055 56.4947 11.6052C56.1944 11.3048 56.0442 10.9377 56.0442 10.5038C56.0442 10.07 56.1944 9.70285 56.4947 9.40248C56.7951 9.10212 57.1622 8.95194 57.5961 8.95194C58.0132 8.95194 58.3637 9.10212 58.6473 9.40248C58.9477 9.70285 59.0979 10.07 59.0979 10.5038C59.0979 10.9377 58.9477 11.3048 58.6473 11.6052C58.3637 11.9055 58.0132 12.0557 57.5961 12.0557ZM58.6974 14.2834V28H56.4196V14.2834H58.6974ZM74.0934 20.6161C74.0934 21.0499 74.0684 21.5088 74.0183 21.9927H63.055C63.1385 23.3444 63.5973 24.404 64.4317 25.1716C65.2827 25.9225 66.309 26.2979 67.5104 26.2979C68.4949 26.2979 69.3126 26.0727 69.9634 25.6221C70.6309 25.1549 71.0981 24.5375 71.3651 23.7699H73.818C73.4509 25.0881 72.7167 26.1644 71.6154 26.9988C70.514 27.8164 69.1457 28.2253 67.5104 28.2253C66.2088 28.2253 65.0408 27.9333 64.0062 27.3492C62.9883 26.7652 62.1873 25.9392 61.6033 24.8712C61.0192 23.7866 60.7272 22.5351 60.7272 21.1167C60.7272 19.6983 61.0109 18.4551 61.5782 17.3872C62.1456 16.3192 62.9382 15.5015 63.9561 14.9342C64.9907 14.3501 66.1755 14.0581 67.5104 14.0581C68.812 14.0581 69.9634 14.3418 70.9646 14.9092C71.9658 15.4765 72.7334 16.2608 73.2674 17.262C73.818 18.2465 74.0934 19.3645 74.0934 20.6161ZM71.7405 20.1405C71.7405 19.2728 71.5486 18.5302 71.1648 17.9128C70.781 17.2787 70.2554 16.8031 69.5879 16.4861C68.9371 16.1523 68.2113 15.9855 67.4103 15.9855C66.2589 15.9855 65.2744 16.3526 64.4567 17.0868C63.6557 17.821 63.1969 18.8389 63.08 20.1405H71.7405ZM82.7818 14.0331C84.4505 14.0331 85.8022 14.542 86.8367 15.5599C87.8713 16.5612 88.3886 18.0129 88.3886 19.9152V28H86.1359V20.2406C86.1359 18.8723 85.7938 17.8294 85.1096 17.1118C84.4255 16.3776 83.491 16.0105 82.3063 16.0105C81.1048 16.0105 80.1453 16.3859 79.4278 17.1368C78.7269 17.8878 78.3765 18.9807 78.3765 20.4158V28H76.0987V14.2834H78.3765V16.2358C78.827 15.5349 79.4361 14.9926 80.2037 14.6088C80.988 14.225 81.8474 14.0331 82.7818 14.0331ZM93.8865 16.1607V24.2455C93.8865 24.9129 94.0283 25.3885 94.312 25.6722C94.5957 25.9392 95.0879 26.0727 95.7888 26.0727H97.4658V28H95.4133C94.1451 28 93.194 27.708 92.5599 27.1239C91.9258 26.5399 91.6087 25.5804 91.6087 24.2455V16.1607H89.8316V14.2834H91.6087V10.8292H93.8865V14.2834H97.4658V16.1607H93.8865ZM114.067 10.4287V28H109.787V20.7662H103.129V28H98.8489V10.4287H103.129V17.3121H109.787V10.4287H114.067ZM129.948 14.0331V28H125.668V26.0977C125.234 26.7151 124.641 27.2157 123.89 27.5995C123.156 27.9666 122.339 28.1502 121.437 28.1502C120.369 28.1502 119.427 27.9166 118.609 27.4493C117.791 26.9654 117.157 26.2729 116.707 25.3718C116.256 24.4707 116.031 23.4111 116.031 22.193V14.0331H120.286V21.6173C120.286 22.5517 120.528 23.2776 121.012 23.7949C121.496 24.3122 122.147 24.5708 122.964 24.5708C123.799 24.5708 124.458 24.3122 124.942 23.7949C125.426 23.2776 125.668 22.5517 125.668 21.6173V14.0331H129.948ZM136.301 16.0105C136.702 15.3597 137.277 14.8341 138.028 14.4336C138.779 14.0331 139.638 13.8328 140.606 13.8328C141.758 13.8328 142.801 14.1249 143.735 14.7089C144.67 15.2929 145.404 16.1273 145.938 17.2119C146.488 18.2966 146.764 19.5564 146.764 20.9915C146.764 22.4266 146.488 23.6948 145.938 24.7961C145.404 25.8808 144.67 26.7235 143.735 27.3242C142.801 27.9082 141.758 28.2002 140.606 28.2002C139.622 28.2002 138.762 28.0083 138.028 27.6245C137.294 27.2241 136.718 26.6984 136.301 26.0476V28H132.021V9.47758H136.301V16.0105ZM142.409 20.9915C142.409 19.9236 142.108 19.0892 141.507 18.4885C140.923 17.8711 140.197 17.5624 139.33 17.5624C138.479 17.5624 137.753 17.8711 137.152 18.4885C136.568 19.1059 136.276 19.9486 136.276 21.0165C136.276 22.0845 136.568 22.9272 137.152 23.5446C137.753 24.162 138.479 24.4707 139.33 24.4707C140.181 24.4707 140.907 24.162 141.507 23.5446C142.108 22.9105 142.409 22.0595 142.409 20.9915Z"
                fill="white"
              />
            </g>
            <defs>
              <clipPath id="clip0_11889_161534">
                <rect width="147" height="36" fill="white" />
              </clipPath>
            </defs>
          </svg>
        </Link>

        <h2 className="font-light text-2xl">
          Hello,{" "}
          <span className="font-bold">
            {isClient && storedData?.user?.name}!
          </span>
        </h2>
      </div>

      <div className="flex items-center justify-end gap-[10px]">
        <Link href={`${process.env.NEXT_PUBLIC_BASE_URL}/add-job/location?client`}>
          <Button variant="light">Create Booking</Button>
        </Link>
        <Link href={`/settings`}>
          <Button variant="purple">
            <svg
              width="25"
              height="25"
              viewBox="0 0 25 25"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_11889_161548)">
                <path
                  d="M12.5 15.5C14.1569 15.5 15.5 14.1569 15.5 12.5C15.5 10.8431 14.1569 9.5 12.5 9.5C10.8431 9.5 9.5 10.8431 9.5 12.5C9.5 14.1569 10.8431 15.5 12.5 15.5Z"
                  stroke="white"
                  strokeWidth="1.5"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
                <path
                  d="M19.9 15.5C19.7669 15.8016 19.7272 16.1362 19.786 16.4606C19.8448 16.785 19.9995 17.0843 20.23 17.32L20.29 17.38C20.476 17.5657 20.6235 17.7863 20.7241 18.0291C20.8248 18.2719 20.8766 18.5322 20.8766 18.795C20.8766 19.0578 20.8248 19.3181 20.7241 19.5609C20.6235 19.8037 20.476 20.0243 20.29 20.21C20.1043 20.396 19.8837 20.5435 19.6409 20.6441C19.3981 20.7448 19.1378 20.7966 18.875 20.7966C18.6122 20.7966 18.3519 20.7448 18.1091 20.6441C17.8663 20.5435 17.6457 20.396 17.46 20.21L17.4 20.15C17.1643 19.9195 16.865 19.7648 16.5406 19.706C16.2162 19.6472 15.8816 19.6869 15.58 19.82C15.2842 19.9468 15.032 20.1572 14.8543 20.4255C14.6766 20.6938 14.5813 21.0082 14.58 21.33V21.5C14.58 22.0304 14.3693 22.5391 13.9942 22.9142C13.6191 23.2893 13.1104 23.5 12.58 23.5C12.0496 23.5 11.5409 23.2893 11.1658 22.9142C10.7907 22.5391 10.58 22.0304 10.58 21.5V21.41C10.5723 21.079 10.4651 20.758 10.2725 20.4887C10.0799 20.2194 9.81074 20.0143 9.5 19.9C9.19838 19.7669 8.86381 19.7272 8.53941 19.786C8.21502 19.8448 7.91568 19.9995 7.68 20.23L7.62 20.29C7.43425 20.476 7.21368 20.6235 6.97088 20.7241C6.72808 20.8248 6.46783 20.8766 6.205 20.8766C5.94217 20.8766 5.68192 20.8248 5.43912 20.7241C5.19632 20.6235 4.97575 20.476 4.79 20.29C4.60405 20.1043 4.45653 19.8837 4.35588 19.6409C4.25523 19.3981 4.20343 19.1378 4.20343 18.875C4.20343 18.6122 4.25523 18.3519 4.35588 18.1091C4.45653 17.8663 4.60405 17.6457 4.79 17.46L4.85 17.4C5.08054 17.1643 5.23519 16.865 5.294 16.5406C5.35282 16.2162 5.31312 15.8816 5.18 15.58C5.05324 15.2842 4.84276 15.032 4.57447 14.8543C4.30618 14.6766 3.99179 14.5813 3.67 14.58H3.5C2.96957 14.58 2.46086 14.3693 2.08579 13.9942C1.71071 13.6191 1.5 13.1104 1.5 12.58C1.5 12.0496 1.71071 11.5409 2.08579 11.1658C2.46086 10.7907 2.96957 10.58 3.5 10.58H3.59C3.92099 10.5723 4.242 10.4651 4.5113 10.2725C4.78059 10.0799 4.98572 9.81074 5.1 9.5C5.23312 9.19838 5.27282 8.86381 5.214 8.53941C5.15519 8.21502 5.00054 7.91568 4.77 7.68L4.71 7.62C4.52405 7.43425 4.37653 7.21368 4.27588 6.97088C4.17523 6.72808 4.12343 6.46783 4.12343 6.205C4.12343 5.94217 4.17523 5.68192 4.27588 5.43912C4.37653 5.19632 4.52405 4.97575 4.71 4.79C4.89575 4.60405 5.11632 4.45653 5.35912 4.35588C5.60192 4.25523 5.86217 4.20343 6.125 4.20343C6.38783 4.20343 6.64808 4.25523 6.89088 4.35588C7.13368 4.45653 7.35425 4.60405 7.54 4.79L7.6 4.85C7.83568 5.08054 8.13502 5.23519 8.45941 5.294C8.78381 5.35282 9.11838 5.31312 9.42 5.18H9.5C9.79577 5.05324 10.048 4.84276 10.2257 4.57447C10.4034 4.30618 10.4987 3.99179 10.5 3.67V3.5C10.5 2.96957 10.7107 2.46086 11.0858 2.08579C11.4609 1.71071 11.9696 1.5 12.5 1.5C13.0304 1.5 13.5391 1.71071 13.9142 2.08579C14.2893 2.46086 14.5 2.96957 14.5 3.5V3.59C14.5013 3.91179 14.5966 4.22618 14.7743 4.49447C14.952 4.76276 15.2042 4.97324 15.5 5.1C15.8016 5.23312 16.1362 5.27282 16.4606 5.214C16.785 5.15519 17.0843 5.00054 17.32 4.77L17.38 4.71C17.5657 4.52405 17.7863 4.37653 18.0291 4.27588C18.2719 4.17523 18.5322 4.12343 18.795 4.12343C19.0578 4.12343 19.3181 4.17523 19.5609 4.27588C19.8037 4.37653 20.0243 4.52405 20.21 4.71C20.396 4.89575 20.5435 5.11632 20.6441 5.35912C20.7448 5.60192 20.7966 5.86217 20.7966 6.125C20.7966 6.38783 20.7448 6.64808 20.6441 6.89088C20.5435 7.13368 20.396 7.35425 20.21 7.54L20.15 7.6C19.9195 7.83568 19.7648 8.13502 19.706 8.45941C19.6472 8.78381 19.6869 9.11838 19.82 9.42V9.5C19.9468 9.79577 20.1572 10.048 20.4255 10.2257C20.6938 10.4034 21.0082 10.4987 21.33 10.5H21.5C22.0304 10.5 22.5391 10.7107 22.9142 11.0858C23.2893 11.4609 23.5 11.9696 23.5 12.5C23.5 13.0304 23.2893 13.5391 22.9142 13.9142C22.5391 14.2893 22.0304 14.5 21.5 14.5H21.41C21.0882 14.5013 20.7738 14.5966 20.5055 14.7743C20.2372 14.952 20.0268 15.2042 19.9 15.5V15.5Z"
                  stroke="white"
                  strokeWidth="1.5"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </g>
              <defs>
                <clipPath id="clip0_11889_161548">
                  <rect
                    width="24"
                    height="24"
                    fill="white"
                    transform="translate(0.5 0.5)"
                  />
                </clipPath>
              </defs>
            </svg>
          </Button>
        </Link>

        <DropdownMenu>
          <DropdownMenuTrigger className="min-w-[137px] w-fit h-[43px] py-[3px] px-[5px] bg-[#7E4DE2] hover:bg-[#7447ce] hover:shadow-lg rounded-full text-white flex items-center justify-between">
            <div className="relative w-[37px] h-[37px]">
              {/* <Image
                src="https://www.shutterstock.com/image-illustration/iconic-character-played-by-johnny-600nw-2359846101.jpg"
                alt="User image"
                width={60}
                height={60}
                className="object-cover rounded-full border-[2px] border-white w-[37px] h-[37px]"
              /> */}
              {isClient && storedData?.user?.name ? (
                <>
                  <Avatar className="w-[37px] h-[37px] text-black">
                    <AvatarImage
                      src={storedData?.user?.image}
                      className="object-cover"
                    />
                    <AvatarFallback>{`
                          ${storedData?.user?.name?.split(" ")[0][0]}${
                      storedData?.user?.name?.split(" ").length > 1
                        ? storedData?.user?.name?.split(" ")[1][0]
                        : ""
                    }`}</AvatarFallback>
                  </Avatar>
                </>
              ) : (
                <>
                  <Skeleton className="w-[37px] h-[37px] rounded-full" />
                </>
              )}

              <div className="absolute right-[2px] bottom-[2px] w-2 h-2 border border-white bg-green-500 rounded-full"></div>
            </div>
            <span>{isClient && storedData?.user?.name}</span>
            <ChevronDown className="w-4 h-4 mr-2" />
          </DropdownMenuTrigger>
          <DropdownMenuContent className="relative right-5 p-0">
            <DropdownMenuItem className="cursor-default pointer-events-none px-6">
              <div className="my-[8px] flex gap-1 items-center">
                {isClient && storedData?.user?.name ? (
                  <>
                    <Avatar>
                      <AvatarImage src={storedData?.user?.image} />
                      <AvatarFallback>{`
                          ${storedData?.user?.name?.split(" ")[0][0]}${
                        storedData?.user?.name?.split(" ").length > 1
                          ? storedData?.user?.name?.split(" ")[1][0]
                          : ""
                      }`}</AvatarFallback>
                    </Avatar>
                  </>
                ) : (
                  <>
                    <Skeleton className="w-10 h-10 rounded-full" />
                  </>
                )}
                <div className="group-hover:!text-[#2C2240]">
                  <h3 className="text-[#2C2240] group-hover:text-[#2C2240] text-[16px] font-[500] leading-[19.93px] tracking-[0.316px]">
                    {storedData?.user?.name}
                  </h3>
                  <p
                    style={{ textTransform: "none" }}
                    className="text-[#6B6B6B] text-[12px] font-[400] leading-normal group-hover:text-[#2C2240]"
                  >
                    {storedData?.user?.email}
                  </p>
                </div>
              </div>
            </DropdownMenuItem>
            <DropdownMenuItem
              onClick={() => router.push(`/settings`)}
              className="hover:!bg-[#F1EEFF] max-lg:hidden duration-0 text-[#2C2240] hover:text-[#2C2240] py-[20px] px-[40px] flex justify-start items-center !text-[14px] font-[400] leading-[24px]"
            >
              <Settings className="mr-[12px]" size={18} />
              Account Settings
            </DropdownMenuItem>
            <DropdownMenuItem
              onClick={() => handleLogout()}
              className="text-[#C20000] duration-0 hover:!bg-[#F1EEFF] hover:text-[#2C2240] py-[20px] px-[40px] flex justify-start items-center !text-[14px] font-[400] leading-[24px]"
            >
              <FiLogOut className="mr-[12px]" size={18} /> Logout
            </DropdownMenuItem>
          </DropdownMenuContent>
        </DropdownMenu>
      </div>
    </div>
  );
}

export default HeaderNav;
