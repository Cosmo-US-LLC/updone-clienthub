# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "staging" ]
#   pull_request:
#     branches: [ "staging" ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     strategy:
#       fail-fast: false
#       matrix:
#         node-version: [22.x]

#     steps:
#       - name: Deploying to DigitalOcean droplet
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.DO_HOST }}
#           username: ${{ secrets.DO_USERNAME }}
#           key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
#           #port: ${{ secrets.PORT }}
#           script: |
#             cd ~/updone/updone-clienthub
#             git pull
#             npm install
#             npm run build
#             pm2 restart 1  # Change "1" to your actual PM2 process name if needed

# steps:
name: Deploy Clienthub to Staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    concurrency:
      group: deploy-nextjs
      cancel-in-progress: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_API_TOKEN }}

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

    - name: Deploy application via SSH
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.DO_USERNAME }}@${{ secrets.DO_HOST }} '
          # Verify Node.js version
          node --version 2>&1

          cd /updone/updone-clienthub &&
          echo "Pulling latest code..." 2>&1 &&
          git stash
          git pull 2>&1 &&

          echo "Removing old node_modules and .next directory..." 2>&1 &&
          rm -rf node_modules .next package-lock.json 2>&1 &&

          echo "Installing dependencies..." 2>&1 &&
          NODE_OPTIONS="--max-old-space-size=4096" npm install 2>&1 &&

          echo "Building application..." 2>&1 &&
          npm run build 2>&1 &&
          
          echo "Restarting application with PM2..." 2>&1 &&
          pm2 restart 1 2>&1
        '
